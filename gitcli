#!/usr/bin/env bash
set -e


if ! command -v whiptail &>/dev/null; then
  echo "'whiptail' not found. Please install for gitcli"
  exit 1
fi


W=$(( $(tput cols) - 4 ))
H=$(( $(tput lines) - 4 ))
LH=$(( H - 10 ))


function whippie() {
  # shorthand to ensure it works
  whiptail "$@" 3>&2 2>&1 1>&3
}


function gitcli_commit() {
  local message
  message="$(whippie --inputbox "Commit Message:" $H $W)"
  git commit -m "$message"
}


function gitcli_push() {
  git push
}


function gitcli_pull() {
  git pull
}


function gitcli_fetch() {
  git fetch
}


function gitcli_switch() {
  local options=()
  for branch in $(git for-each-ref --format="%(refname:strip=2)"); do
    options+=("$branch" "$branch")
  done
  BRANCH=$(
      whippie --menu "Select the Branch you want to switch to" $H $W $LH --notags --ok-button "Switch" \
      "${options[@]}"
    )
  git switch "$BRANCH"
}


#function gitcli_branch() {
#    echo "$0"
#}


function gitcli_undo_commit() {
    git reset --soft HEAD~
}


function gitcli_init() {
  git init .
}


function gitcli_clone() {
  local uri
  uri="$(whippie --inputbox "uri:" $H $W)"
  git clone "$uri"
}


function gitcli_update() {
  local tmpfile this_file
  tmpfile="$(mktemp)"
  this_file="${BASH_SOURCE[0]}"
  if command -v wget &>/dev/null; then
    wget "https://github.com/utility-libraries/gitcli/raw/main/gitcli" -O "$tmpfile"
  elif command -v curl &>/dev/null; then
    curl -L "https://github.com/utility-libraries/gitcli/raw/main/gitcli" -o "$tmpfile"
  else
    echo "Could not find wget or curl to download latest version"
    exit 1
  fi
  if [ -s "$tmpfile" ]; then
    mv -f "$tmpfile" "$this_file"
    chmod +x "$this_file"
  else
    echo "Download has failed for some reason"
  fi
}


function gitcli_main() {
  local current_branch cmd
  current_branch=$(git symbolic-ref -q HEAD)
  current_branch=${current_branch##refs/heads/}
  current_branch=${current_branch:-HEAD}

  cmd=$(whippie --menu "What do you want to do?\nBranch: $current_branch" $H $W $LH \
    "commit" "Record changes to the repository" \
    "push" "Push commits etc to the remote repository" \
    "pull" "Fetch from remote and integrate with the local branch" \
    "fetch" "Fetch changes" \
    "switch" "Switch the current branch" \
    "undo_commit" "Undo the last commit" \
    "init" "Initialize a new repository" \
    "clone" "Clone a remote repository" \
    "update" "Update GitCLI"
  )
  gitcli_"$cmd"
}


# meaning: if not sourced
if ! (return 0 2>/dev/null); then
  gitcli_main "$@"
fi

# notes and stuff:
# https://git.kernel.org/pub/scm/git/git.git/tree/contrib/completion/git-completion.bash?id=HEAD
